(function(root, Backbone) {

    Backbone.ModalView = Backbone.View.extend({
        tagName: 'div',
        className: 'modal fade',
        attributes: {
            'tabindex': -1,
            'role': 'dialog',
            'aria-labelledby': 'modal-title',
            'aria-hidden': 'true'
        },

        Model: null,
        modalOptions: {
            keyboard: true,
            backdrop: 'static',
            show: true
        },

        changed: false,

        events: {
            'click .btn-cancel': 'cancel',
            'click .btn-save': 'save'
        },

        previusAttributes: null,

        constructor: function(options) {
            Backbone.View.apply(this, [options]);
        },

        initialize: function(options) {
            var that = this;

            if (!this.model && !this.Model) {
                return console.log('A model is required');
            }

            if (!this.model) {
                this.model = new this.Model();
            }

            this.previusAttributes = this.model.toJSON();

            // keep control of changed models.
            this.listenTo(this.model, 'change', function() {
                that.changed = true;
            });

            if (this.init) this.init(options);
        },

        render: function() {
            var that = this;

            // --
            this.renderData = this.model.toJSON();
            if (this.beforeRender) this.beforeRender.apply(this, arguments);

            this.$el.html(this.template(this.renderData));

            // --
            this.$el.modal(this.modalOptions);
            this.$el.on('hidden.bs.modal', function() {
                that.remove();
                that.unbind();
            });

            // --
            Backbone.Bindings(this);

            // --
            if (this.onRender) this.onRender.apply(this, arguments);
        },

        cancel: function() {
            var that = this;

            if (this.changed) {
                return SpecialK.confirm('Han habido cambios, salir sin guardar?', function(result) {
                    if (result) {
                        if (that.model.isNew()) {
                            that.model.destroy();
                        } else {
                            that.model.set(that.previusAttributes);
                        }

                        that.$el.modal('hide');
                    }
                });
            } else {
                if (this.model.isNew()) {
                    this.model.destroy();
                }
            }

            this.$el.modal('hide');
        },

        save: function() {
            this.model.save(null, {
                success: function() {

                },

                error: function(err) {
                    console.error(err);
                }
            });
        }
    });

    // Backbone.Modal.extend = function(child) {
    //     var view = Backbone.View.extend.apply(this, arguments);
    //     view.prototype.events = _.extend({}, this.prototype.events, child.events);
    //     return view;
    // };

})(window, Backbone);
