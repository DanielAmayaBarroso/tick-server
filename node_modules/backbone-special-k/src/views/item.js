(function() {

    /**
     * Item View
     */
    Backbone.ItemView = Backbone.View.extend({
        tagName: 'tr',
        renderData: null,
        modalView: null,
        messages: {
            removeError: 'Ha sucedido un error al eliminar esta entrada.',
            confirmRemove: 'Seguro que quieres eliminar esta entrada?'
        },

        events: {}, // user defined events
        _events: { // SpecialK default events
            'click .btn-edit': 'editItem',
            'click .btn-remove': 'removeItem'
        },

        constructor: function() {
            var that = this;
            _.forOwn(this._events, function(action, event) {
                that.events[event] = action;
            });

            Backbone.View.apply(this, arguments);
        },

        initialize: function(options) {
            if (!this.model) {
                this.model = new this.Model();
            }

            this.listenTo(this.model, 'remove', this.destroy);
            this.listenTo(this.model, 'change', this.render);

            if (this.init) this.init(options);
        },

        render: function() {

            this.renderData = this.model.toJSON();

            if (this.beforeRender) this.beforeRender();
            this.$el.html(this.template(this.renderData));
            if (this.onRender) this.onRender();

            Backbone.InlineEdit(this);
            Backbone.Bindings(this);

            return this;
        },

        // remove dom item
        destroy: function() {
            var that = this;
            this.$el.hide('fast', function() {
                that.unbind();
                that.remove();
            });
        },

        removeItem: function(e) {
            e = e || {};
            var that = this;

            var remove = function() {
                that.model.destroy({
                    success: function() {
                        that.destroy();
                    },
                    error: function() {
                        SpecialK.alert(that.messages.removeError);
                    }
                });
            };

            if (e.ctrlKey) {
                remove();
            } else {
                SpecialK.confirm(this.messages.confirmRemove, function(sure) {
                    if (sure) remove();
                });
            }
        },

        editItem: function() {
            if (!this.modalView) return;
            var modal = new this.modalView({model: this.model});
            modal.render();
        }
    });

})();
