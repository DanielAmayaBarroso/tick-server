(function(Backbone, SpecialK, SK_JST) {


    var inlineEdit = {};

    inlineEdit.renderInput = function(ctx) {
        SpecialK.modifiers.run(ctx, 'before-render');

        var input = SK_JST['tpl/inline-edit-input-text']({
            key: ctx.key,
            value: ctx.plainValue
        });
        var $input = $(input);

        $input.find('.form-control').on('keydown',
            inlineEdit.setKeypress.bind(ctx)
        );

        ctx.$el.html($input);
        setTimeout(function() {
            $input.find('.form-control').select();
        });

        return $input;
    };

    inlineEdit.setKeypress = function(e) {
        e.stopPropagation();
        if (e.keyCode === 27) {
            inlineEdit.renderBackTD(this);
        }

        if (e.keyCode === 13) {
            inlineEdit.saveInput(this);
        }
    };

    inlineEdit.renderBackTD = function(ctx) {
        var html = ctx.plainValue;

        if (ctx.tplname) {
            html = '';
            try {
                html = window.JST[ctx.tplName](ctx);
            } catch(e) {
                console.error(e);
            }
        }

        ctx.$el.html(html);

        return html;
    };

    inlineEdit.saveInput = function(ctx) {
        value = ctx.$input.find('input').val();
        ctx.value = value;
        ctx.plainValue = value;
        ctx = SpecialK.modifiers.run(ctx);

        var value = SpecialK.modifiers.normalizeValue(ctx);
        var key   = ctx.key.split('.')[0];

        if (ctx.previusValue !== value) {
            // estos silent estaría bién parametrizarlos
            ctx.view.model.set(key, value, {silent: true});
            ctx.view.model.save(null, {silent: true});
            inlineEdit.renderBackTD(ctx);
        }
    };

    /**
     * Constructor, se llama desde el render de la vista
     */
    Backbone.InlineEdit = function(view) {

        view.$el.off('dblclick');
        view.$el.on('dblclick', 'td[data-inline-edit]', function() {

            var ctx = {};
            ctx.$el= $(this);
            ctx.tplname = ctx.$el.data('tpl') || null;
            ctx.key = ctx.$el.data('inline-edit');
            ctx.value = view.model.get(ctx.key) || '';
            ctx.plainValue = $(this).text();
            ctx.view = view;
            ctx.$input = inlineEdit.renderInput(ctx);
        });
    };


})(window.Backbone, window.SpecialK, window.SK_JST);
