var gulp = require('gulp');
var uglify = require('gulp-uglify');
var concat = require('gulp-concat');
var rimraf = require('gulp-rimraf');
var header = require('gulp-header');
var dot = require('gulp-dot-precompiler');

var handleErrors = function() {
    console.log(arguments);
};

var jsfiles = [
    '.tpm/templates.js',
    'src/specialk.js',
    'src/router.js',
    'src/tools/**/*.js',
    'src/views/**/*.js'
];

gulp.task('dot', function() {
    gulp.src('src/**/*.dot')
        .pipe(dot({
            dictionary: 'SK_JST',
            separator: '/',
            templateSettings: {
                varname: 'it'
            }
        }))
        .pipe(header('window.SK_JST = {};'))
        .pipe(concat('templates.js'))
        .pipe(gulp.dest('.tmp/'));
});

// clean dist dir
gulp.task('clean-dist', function() {
    return gulp.src('dist', {read: false}) // much faster
      .pipe(rimraf());
});

// create a minified file with all SpecialK components
gulp.task('pack', ['clean-dist'], function() {
    return gulp.src(jsfiles)
        .pipe(concat('backbone-specialk.min.js'))
        .pipe(uglify())
        .pipe(gulp.dest('./dist'))
        .on('error', handleErrors);
});

// minify individual components in the /dist/components dir
gulp.task('components', ['clean-dist'], function() {
    return gulp.src(jsfiles)
        .pipe(uglify())
        .pipe(gulp.dest('./dist/components'))
        .on('error', handleErrors);
});


gulp.task('watch', function() {
    gulp.watch(jsfiles, ['pack', 'components']);
});

gulp.task('default', ['pack', 'components', 'dot']);
